define

number sub attribute, value long,
    plays row:pos1, plays row:pos2, plays row:pos3, plays row:pos4, plays row:pos5, plays row:pos6,
    plays column:pos1, plays column:pos2, plays column:pos3, plays column:pos4, plays column:pos5, plays column:pos6,
    plays solution:pos11, plays solution:pos12, plays solution:pos13, plays solution:pos14, plays solution:pos15, plays solution:pos16,
    plays solution:pos21, plays solution:pos22, plays solution:pos23, plays solution:pos24, plays solution:pos25, plays solution:pos26,
    plays solution:pos31, plays solution:pos32, plays solution:pos33, plays solution:pos34, plays solution:pos35, plays solution:pos36,
    plays solution:pos41, plays solution:pos42, plays solution:pos43, plays solution:pos44, plays solution:pos45, plays solution:pos46,
    plays solution:pos51, plays solution:pos52, plays solution:pos53, plays solution:pos54, plays solution:pos55, plays solution:pos56,
    plays solution:pos61, plays solution:pos62, plays solution:pos63, plays solution:pos64, plays solution:pos65, plays solution:pos66;
row sub relation,
    relates pos1, relates pos2, relates pos3, relates pos4, relates pos5, relates pos6,
    owns is-invalid;

column sub relation,
    relates pos1, relates pos2, relates pos3, relates pos4, relates pos5, relates pos6,
    owns is-invalid;

is-invalid sub attribute, value boolean;

solution sub relation,
    relates pos11, relates pos12, relates pos13, relates pos14, relates pos15, relates pos16,
    relates pos21, relates pos22, relates pos23, relates pos24, relates pos25, relates pos26,
    relates pos31, relates pos32, relates pos33, relates pos34, relates pos35, relates pos36,
    relates pos41, relates pos42, relates pos43, relates pos44, relates pos45, relates pos46,
    relates pos51, relates pos52, relates pos53, relates pos54, relates pos55, relates pos56,
    relates pos61, relates pos62, relates pos63, relates pos64, relates pos65, relates pos66;

rule row-rule:
when {
    $v1 isa number;
    $v2 isa number;
    $v3 isa number;
    $v4 isa number;
    $v5 isa number;
    $v6 isa number;
    $v1 != $v2;
    $v1 != $v3;
    $v1 != $v4;
    $v1 != $v5;
    $v1 != $v6;

    $v2 != $v3;
    $v2 != $v4;
    $v2 != $v5;
    $v2 != $v6;

    $v3 != $v4;
    $v3 != $v5;
    $v3 != $v6;

    $v4 != $v5;
    $v4 != $v6;

    $v5 != $v6;
} then {
   (pos1: $v1, pos2: $v2, pos3: $v3, pos4: $v4, pos5: $v5, pos6: $v6) isa row;
};

rule invalid-row-rule:
when {
    $r ($x, $y) isa row;
    
    # Since the semantics dictate ($x, $y)  $x and $y to be connected by separate edges, this condition should suffice  
    $x != $y;
} then {
    $r has is-invalid true;
};

rule column-rule:
when {
    $v1 isa number;
    $v2 isa number;
    $v3 isa number;
    $v4 isa number;
    $v5 isa number;
    $v6 isa number;
    $v1 != $v2;
    $v1 != $v3;
    $v1 != $v4;
    $v1 != $v5;
    $v1 != $v6;

    $v2 != $v3;
    $v2 != $v4;
    $v2 != $v5;
    $v2 != $v6;

    $v3 != $v4;
    $v3 != $v5;
    $v3 != $v6;

    $v4 != $v5;
    $v4 != $v6;

    $v5 != $v6;
} then {
    (pos1: $v1, pos2: $v2, pos3: $v3, pos4: $v4, pos5: $v5, pos6: $v6) isa column;
};

rule invalid-column-rule:
when {
    $r ($x, $y) isa column;
    $x != $y;
} then {
    $r has is-invalid true;
};

rule solution-rule:
when {
    (pos1: $a1, pos2: $b1, pos3: $c1, pos4: $d1, pos5: $e1, pos6: $f1) isa row;
    (pos1: $a2, pos2: $b2, pos3: $c2, pos4: $d2, pos5: $e2, pos6: $f2) isa row;
    (pos1: $a3, pos2: $b3, pos3: $c3, pos4: $d3, pos5: $e3, pos6: $f3) isa row;
    (pos1: $a4, pos2: $b4, pos3: $c4, pos4: $d4, pos5: $e4, pos6: $f4) isa row;
    (pos1: $a5, pos2: $b5, pos3: $c5, pos4: $d5, pos5: $e5, pos6: $f5) isa row;
    (pos1: $a6, pos2: $b6, pos3: $c6, pos4: $d6, pos5: $e6, pos6: $f6) isa row;

    (pos1: $a1, pos2: $a2, pos3: $a3, pos4: $a4, pos5: $a5, pos6: $a6) isa column;
    (pos1: $b1, pos2: $b2, pos3: $b3, pos4: $b4, pos5: $b5, pos6: $b6) isa column;
    (pos1: $c1, pos2: $c2, pos3: $c3, pos4: $c4, pos5: $c5, pos6: $c6) isa column;
    (pos1: $d1, pos2: $d2, pos3: $d3, pos4: $d4, pos5: $d5, pos6: $d6) isa column;
    (pos1: $e1, pos2: $e2, pos3: $e3, pos4: $e4, pos5: $e5, pos6: $e6) isa column;
    (pos1: $f1, pos2: $f2, pos3: $f3, pos4: $f4, pos5: $f5, pos6: $f6) isa column;
} then {
    (
    pos11: $a1, pos12: $b1, pos13: $c1, pos14: $d1, pos15: $e1, pos16: $f1,
    pos21: $a2, pos22: $b2, pos23: $c2, pos24: $d2, pos25: $e2, pos26: $f2,
    pos31: $a3, pos32: $b3, pos33: $c3, pos34: $d3, pos35: $e3, pos36: $f3,
    pos41: $a4, pos42: $b4, pos43: $c4, pos44: $d4, pos45: $e4, pos46: $f4,
    pos51: $a5, pos52: $b5, pos53: $c5, pos54: $d5, pos55: $e5, pos56: $f5,
    pos61: $a6, pos62: $b6, pos63: $c6, pos64: $d6, pos65: $e6, pos66: $f6
    ) isa solution;
};

